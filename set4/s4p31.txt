This challenge introduced a new type of attack, the timing leak. I'm not 100% sure, but I think this is the first side-channel attack out of all the challenges and an excellent representation of real-world cryptography as most attacks in the "real world" are side-channel attacks. With just a few milliseconds difference, we were able to bruteforce a SHA-1 HMAC (though the attack would also work with other hash algorithms) in a few minutes (23 to be exact). 

I do wonder how we would attack a more realistic challenge, though. The insecure function I implemented purposely had a 50 ms delay, but normal built-in algorithms have no purposeful delay. 50 ms is also smaller than my ping to some websites. The challenge also mentions how this would likely only work on LAN. Finally, what if the target added a random delay after every request?