More AES-CBC exploits, and this one is supposedly famous. It relates to how we can use information about whether something is correctly padded (a "padding oracle") to find the plaintext byte-by-byte. Here's how the attack works:

Each block depends on the block before or the IV, so this attack works for each block in sequence. We first try xor'ing the last byte of the block with every possible value from 0-255, and eventually it will be set to \x01. Since the padding oracle will tell us we have correct padding there, we know that the last byte of the plaintext is [character] ^ \x01. After this, we can try the same thing with \x02, \x02 and eventually get the entire IV. We then xor the IV with the ciphertext to get the block.

The more of these challenges I do, the more enjoyable they become and the more I learn. This builds off the last challenge in set 2, a bit-flipping challenge. Finally, this also makes me more paranoid about security since distinguishable errors can leak the plaintext, and this also creates the possibility of timing attacks even if you always return one error. The IV in provided this challenge, but from researching I found out that even if it was secret, we could have leaked all but one block.
